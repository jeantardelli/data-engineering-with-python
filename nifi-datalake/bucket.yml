flows:
  8ffd8626-e9bd-48e1-9490-d33e0504f046: {ver: 1, file: InsertStaging.snapshot, comments: 'Building
      a Production Data Pipeline - NiFi Pipeline, Inserting Staging (11g)', author: anonymous,
    created: 1607606660493, flowName: InsertStaging, flowDesc: This pipeline inserts
      data into the staging table}
  045d4795-2b90-46dc-a623-4676bf6588fb: {ver: 1, file: query-staging.snapshot, comments: 'Building
      a Production Data Pipeline - NiFi Pipeline, Query Staging (11g)', author: anonymous,
    created: 1607607733226, flowName: query-staging, flowDesc: Pipeline that queries
      the staging area}
  32e4d834-a9a6-408b-8364-464a665195d5: {ver: 1, file: validate-staging.snapshot,
    comments: 'Building a Production Data Pipeline - NiFi Pipeline, Inserting Staging
      (11i)', author: anonymous, created: 1607607869020, flowName: validate-staging,
    flowDesc: Pipeline that validates the staging area using great expectations}
  7cc2ce9c-06e1-4f15-bb53-ab5d7d57eaae: {ver: 1, file: insert-warehouse.snapshot,
    comments: 'Building a Production Data Pipeline - NiFi Pipeline, Inserting Staging
      (11j)', author: anonymous, created: 1607607926498, flowName: insert-warehouse,
    flowDesc: Pipeline that inserts data into the data warehouse}
  7a0ccd1f-68d2-4ecd-b74b-ca3f4328b2ab: {ver: 1, file: kafka-consumer.snapshot, comments: Streaming
      data with Apache Kafka - Apache NiFi Consumer (13c), author: anonymous, created: 1607711372401,
    flowName: kafka-consumer, flowDesc: This pipeline illustrates how to create a
      cluster of Kafka consumer nodes in Apache NiFi}
  c388a5ec-c528-4b62-8d2e-c456621f754b: {ver: 1, file: kafka-producer.snapshot, comments: Streaming
      data with Apache Kafka - Apache Nifi Producer (13b), author: anonymous, created: 1607711166479,
    flowName: kafka-producer, flowDesc: 'This pipeline illustrates how to produce
      messages into a topic from JSON files '}
  2289c8b1-d5b6-4397-a10e-265cf024546c: {ver: 1, file: scan-data-lake.snapshot, comments: 'Building
      a Production Data Pipeline - NiFi Pipeline, ScanContent (11e)', author: anonymous,
    created: 1607525897076, flowName: scan-data-lake, flowDesc: This pipeline imports
      a file dictionary and sends a message in the Slack app when a record matches
      any file content.}
  5d9aad04-4e8e-446b-86bd-25149bfcf030: {ver: 1, file: read-data-lake.snapshot, comments: 'Building
      a Production Data Pipeline - NiFi Pipeline, Reading from Datalake (11c)', author: anonymous,
    created: 1607521190028, flowName: read-data-lake, flowDesc: Reads files from the
      datalake}
layoutVer: 1
bucketId: c491595f-5c1c-4c27-a416-402d67e150ca
